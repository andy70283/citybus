import { openBlock as n, createElementBlock as r, Fragment as y, createCommentVNode as d, createStaticVNode as k, createElementVNode as i, ref as w, computed as T, watchEffect as _, normalizeClass as g, normalizeStyle as F, withModifiers as p, renderSlot as M, toDisplayString as S, renderList as V, createBlock as U, pushScopeId as E, popScopeId as L } from "vue";
const Z = {
  key: 0,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-xls"
}, O = /* @__PURE__ */ k('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M4 15l4 6"></path><path d="M4 21l4 -6"></path><path d="M17 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"></path><path d="M11 15v6h3"></path>', 7), R = [
  O
], q = {
  key: 1,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-txt"
}, G = /* @__PURE__ */ k('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M16.5 15h3"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M4.5 15h3"></path><path d="M6 15v6"></path><path d="M18 15v6"></path><path d="M10 15l4 6"></path><path d="M10 21l4 -6"></path>', 10), J = [
  G
], K = {
  key: 2,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-doc"
}, P = /* @__PURE__ */ k('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M5 15v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z"></path><path d="M20 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0"></path><path d="M12.5 15a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1 -3 0v-3a1.5 1.5 0 0 1 1.5 -1.5z"></path>', 6), Q = [
  P
], X = {
  key: 3,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-pdf"
}, Y = /* @__PURE__ */ k('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6"></path><path d="M17 18h2"></path><path d="M20 15h-3v6"></path><path d="M11 15v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z"></path>', 7), ee = [
  Y
], te = {
  key: 4,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-csv"
}, ae = /* @__PURE__ */ k('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M7 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0"></path><path d="M10 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"></path><path d="M16 15l2 6l2 -6"></path>', 6), oe = [
  ae
], le = {
  key: 5,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-video"
}, ne = /* @__PURE__ */ i("path", {
  stroke: "none",
  d: "M0 0h24v24H0z",
  fill: "none"
}, null, -1), ie = /* @__PURE__ */ i("path", { d: "M15 10l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -1.447 .894l-4.553 -2.276v-4z" }, null, -1), re = /* @__PURE__ */ i("path", { d: "M3 6m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" }, null, -1), se = [
  ne,
  ie,
  re
], de = {
  __name: "Icon",
  props: {
    name: String
  },
  setup(e) {
    return (b, o) => (n(), r(y, null, [
      e.name === "xls" ? (n(), r("svg", Z, R)) : d("", !0),
      e.name === "txt" ? (n(), r("svg", q, J)) : d("", !0),
      e.name === "doc" || e.name === "docx" ? (n(), r("svg", K, Q)) : d("", !0),
      e.name === "pdf" ? (n(), r("svg", X, ee)) : d("", !0),
      e.name === "csv" ? (n(), r("svg", te, oe)) : d("", !0),
      e.name === "mp4" || e.name === "mkv" || e.name === "mpeg-4" || e.name === "webm" || e.name === "mov" ? (n(), r("svg", le, se)) : d("", !0)
    ], 64));
  }
}, he = (e, b) => {
  const o = e.__vccOpts || e;
  for (const [u, v] of b)
    o[u] = v;
  return o;
}, C = (e) => (E("data-v-ce9694a7"), e = e(), L(), e), ce = { class: "dropzone" }, pe = ["id", "accept", "multiple"], ue = /* @__PURE__ */ C(() => /* @__PURE__ */ i("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "60",
  height: "60",
  viewBox: "0 0 24 24",
  fill: "none",
  class: "transition-all decoration-neutral-150 ease-linear"
}, [
  /* @__PURE__ */ i("path", {
    opacity: ".4",
    d: "M22 7.81v6.09l-1.63-1.4c-.78-.67-2.04-.67-2.82 0l-4.16 3.57c-.78.67-2.04.67-2.82 0l-.34-.28c-.71-.62-1.84-.68-2.64-.14l-4.92 3.3-.11.08c-.37-.8-.56-1.75-.56-2.84V7.81C2 4.17 4.17 2 7.81 2h8.38C19.83 2 22 4.17 22 7.81Z",
    fill: "#c3c3c3"
  }),
  /* @__PURE__ */ i("path", {
    d: "M9.001 10.381a2.38 2.38 0 1 0 0-4.76 2.38 2.38 0 0 0 0 4.76ZM21.999 13.899v2.29c0 3.64-2.17 5.81-5.81 5.81h-8.38c-2.55 0-4.39-1.07-5.25-2.97l.11-.08 4.92-3.3c.8-.54 1.93-.48 2.64.14l.34.28c.78.67 2.04.67 2.82 0l4.16-3.57c.78-.67 2.04-.67 2.82 0l1.63 1.4Z",
    fill: "#c3c3c3"
  })
], -1)), ve = /* @__PURE__ */ C(() => /* @__PURE__ */ i("div", { class: "titles" }, [
  /* @__PURE__ */ i("h1", { class: "m-0" }, "Drop your files here")
], -1)), fe = { class: "m-0 description" }, me = ["src", "alt"], we = {
  key: 2,
  class: "img-details"
}, ge = ["onClick"], Me = /* @__PURE__ */ C(() => /* @__PURE__ */ i("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-x"
}, [
  /* @__PURE__ */ i("path", {
    stroke: "none",
    d: "M0 0h24v24H0z",
    fill: "none"
  }),
  /* @__PURE__ */ i("path", { d: "M18 6l-12 12" }),
  /* @__PURE__ */ i("path", { d: "M6 6l12 12" })
], -1)), ye = [
  Me
], ke = ["src"], be = {
  __name: "Vue3Dropzone",
  props: {
    modelValue: {
      type: Array,
      default: []
    },
    multiple: {
      type: Boolean,
      default: !1
    },
    previews: {
      type: Array,
      default: []
    },
    mode: {
      type: String,
      default: "drop",
      validator(e) {
        return ["drop", "preview"].includes(e);
      }
    },
    disabled: {
      type: Boolean,
      default: !1
    },
    state: {
      type: String,
      validator(e) {
        return ["error", "success", "indeterminate"].includes(e);
      }
    },
    accept: String,
    maxFileSize: {
      type: Number,
      default: 5
    },
    maxFiles: {
      type: Number,
      default: 5
    },
    width: [Number, String],
    height: [Number, String],
    imgWidth: [Number, String],
    imgHeight: [Number, String],
    previewWrapperClasses: String,
    showSelectButton: {
      type: Boolean,
      default: !0
    },
    selectFileStrategy: {
      type: String,
      default: "replace"
    }
  },
  emits: ["drop", "update:modelValue"],
  setup(e, { emit: b }) {
    const o = e, u = b, v = w(null), h = w([]), c = w([]), m = w(!1), H = w(null), $ = T(() => o.id ? $ : Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))), B = (s) => {
      const l = [...s.target.files].slice(0, o.maxFiles), t = l.map((a) => (a.size / 1024 / 1024).toFixed(2) <= o.maxFileSize), f = l.map((a) => o.accept ? o.accept.includes(a.type) : []);
      if ((t.every((a) => a === !0) && o.accept && f.every((a) => a === !0) || t.every((a) => a === !0)) && (o.selectFileStrategy === "replace" && (h.value = l.map((a) => ({
        file: a,
        id: Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))
      }))), o.selectFileStrategy === "merge" && (h.value = [...h.value, ...l.map((a) => ({
        file: a,
        id: Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))
      }))])), t.some((a) => a !== !0)) {
        const a = l.filter((z) => (z.size / 1024 / 1024).toFixed(2) > o.maxFileSize);
        u("error", a);
      }
      if (o.accept && f.some((a) => a !== !0)) {
        const a = l.filter((z) => !o.accept.includes(z.type));
        u("error", a);
      }
      const D = [];
      h.value.map((a) => {
        D.push({
          src: URL.createObjectURL(a.file),
          name: a.file.name,
          size: a.file.size,
          type: a.file.type,
          isTypeAccepted: o.accept ? o.accept.includes(a.file.type) : void 0,
          id: a.id
        });
      }), c.value = D;
    }, x = () => {
      !o.disabled && o.mode !== "preview" && (m.value = !m.value);
    }, I = (s) => {
      if (x(), !o.disabled && o.mode !== "preview") {
        const l = {
          target: {
            files: [...s.dataTransfer.files]
          }
        };
        u("drop", s), B(l);
      }
    }, W = (s) => {
      c.value = c.value.filter((l) => l.id !== s.id), h.value = h.value.filter((l) => l.id !== s.id), u("update:modelValue", h.value);
    }, N = () => {
      !h.value.length && o.state === "indeterminate" && (m.value = !0);
    }, j = () => {
      m.value = !1;
    }, A = (s) => {
      !o.disabled && o.mode === "drop" && s.target.id === "dropzoneWrapper" ? v.value.click() : s.preventDefault();
    };
    return _(() => {
      o.previews && o.previews.length && (c.value = o.previews.map((s) => ({
        src: s,
        id: Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))
      })));
    }), _(() => {
      h.value && h.value.length && u("update:modelValue", h.value);
    }), (s, l) => (n(), r("div", ce, [
      i("div", {
        class: g(["dropzone-wrapper", [{ "dropzone-wrapper--active": m.value, "dropzone-wrapper--disabled": e.disabled }, e.state ? `dropzone-wrapper--${e.state}` : ""]]),
        style: F({ width: e.width, height: e.height }),
        onDragenter: p(x, ["prevent"]),
        onDragleave: p(x, ["prevent"]),
        onDrop: p(I, ["prevent"]),
        onDragover: l[1] || (l[1] = p(() => {
        }, ["prevent"])),
        onMouseover: N,
        onMouseleave: j,
        ref_key: "dropzoneWrapper",
        ref: H,
        onClick: p(A, ["self"]),
        id: "dropzoneWrapper"
      }, [
        i("input", {
          type: "file",
          ref_key: "fileInput",
          ref: v,
          class: "hidden",
          id: $.value,
          accept: e.accept,
          onInput: B,
          multiple: e.multiple
        }, null, 40, pe),
        c.value.length ? (n(), r(y, { key: 1 }, [
          e.mode === "drop" ? (n(), r("div", {
            key: 0,
            class: g(["preview-container", e.previewWrapperClasses])
          }, [
            (n(!0), r(y, null, V(c.value, (t) => M(s.$slots, "preview", { data: t }, () => [
              i("div", {
                class: g(["preview", { preview__multiple: e.multiple, preview__file: t && t.type && !t.type.includes("image/") }]),
                style: F({ width: `${e.imgWidth} !important`, height: `${e.imgHeight} !important` })
              }, [
                t && t.type && t.type.includes("image/") ? (n(), r("img", {
                  key: 0,
                  src: t.src,
                  alt: t.name
                }, null, 8, me)) : d("", !0),
                t && t.type && !t.type.includes("image/") || t && t.type && !t.type.includes("video/") ? (n(), U(de, {
                  key: 1,
                  name: t.name.split(".").pop()
                }, null, 8, ["name"])) : d("", !0),
                t.name || t.size ? (n(), r("div", we, [
                  i("button", {
                    class: "img-remove",
                    onClick: (f) => W(t)
                  }, ye, 8, ge),
                  i("h2", null, S(t.name), 1),
                  i("span", null, S((t.size / 1024 / 1024).toFixed(2)) + "MB", 1)
                ])) : d("", !0)
              ], 6)
            ], !0)), 256))
          ], 2)) : d("", !0),
          e.mode === "preview" ? (n(), r("div", {
            key: 1,
            class: g(["preview-container", e.previewWrapperClasses])
          }, [
            (n(!0), r(y, null, V(c.value, (t) => (n(), r("div", {
              class: g(["preview", { preview__multiple: c.value.length > 1 }]),
              style: F({ width: `${e.imgWidth} !important`, height: `${e.imgHeight} !important` })
            }, [
              i("img", {
                src: t.src
              }, null, 8, ke)
            ], 6))), 256))
          ], 2)) : d("", !0)
        ], 64)) : (n(), r(y, { key: 0 }, [
          M(s.$slots, "placeholder-img", {}, () => [
            ue
          ], !0),
          M(s.$slots, "title", {}, () => [
            ve
          ], !0),
          M(s.$slots, "button", { fileInput: v.value }, () => [
            e.showSelectButton ? (n(), r("button", {
              key: 0,
              onClick: l[0] || (l[0] = (t) => {
                var f;
                return (f = v.value) == null ? void 0 : f.click();
              }),
              class: "select-file"
            }, "Select File")) : d("", !0)
          ], !0),
          M(s.$slots, "description", {}, () => [
            i("p", fe, " Files must be under " + S(e.maxFileSize) + "MB " + S(e.accept ? `and in ${e.accept} formats` : ""), 1)
          ], !0)
        ], 64))
      ], 38),
      e.disabled ? (n(), r("div", {
        key: 0,
        class: "dropzone-wrapper__disabled",
        onClick: l[2] || (l[2] = p(() => {
        }, ["prevent"])),
        onDrop: l[3] || (l[3] = p(() => {
        }, ["prevent"])),
        onDragover: l[4] || (l[4] = p(() => {
        }, ["prevent"]))
      }, null, 32)) : d("", !0)
    ]));
  }
}, xe = /* @__PURE__ */ he(be, [["__scopeId", "data-v-ce9694a7"]]);
export {
  xe as default
};
