import {
  Fragment,
  computed,
  createBaseVNode,
  createBlock,
  createCommentVNode,
  createElementBlock,
  createStaticVNode,
  normalizeClass,
  normalizeStyle,
  openBlock,
  popScopeId,
  pushScopeId,
  ref,
  renderList,
  renderSlot,
  toDisplayString,
  watchEffect,
  withModifiers
} from "./chunk-U3LI7FBV.js";
import "./chunk-V6TY7KAL.js";

// node_modules/@jaxtheprime/vue3-dropzone/dist/Vue3Dropzone.es.js
var Z = {
  key: 0,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-xls"
};
var O = createStaticVNode('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M4 15l4 6"></path><path d="M4 21l4 -6"></path><path d="M17 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"></path><path d="M11 15v6h3"></path>', 7);
var R = [
  O
];
var q = {
  key: 1,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-txt"
};
var G = createStaticVNode('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M16.5 15h3"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M4.5 15h3"></path><path d="M6 15v6"></path><path d="M18 15v6"></path><path d="M10 15l4 6"></path><path d="M10 21l4 -6"></path>', 10);
var J = [
  G
];
var K = {
  key: 2,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-doc"
};
var P = createStaticVNode('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M5 15v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z"></path><path d="M20 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0"></path><path d="M12.5 15a1.5 1.5 0 0 1 1.5 1.5v3a1.5 1.5 0 0 1 -3 0v-3a1.5 1.5 0 0 1 1.5 -1.5z"></path>', 6);
var Q = [
  P
];
var X = {
  key: 3,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-pdf"
};
var Y = createStaticVNode('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M5 18h1.5a1.5 1.5 0 0 0 0 -3h-1.5v6"></path><path d="M17 18h2"></path><path d="M20 15h-3v6"></path><path d="M11 15v6h1a2 2 0 0 0 2 -2v-2a2 2 0 0 0 -2 -2h-1z"></path>', 7);
var ee = [
  Y
];
var te = {
  key: 4,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-file-type-csv"
};
var ae = createStaticVNode('<path stroke="none" d="M0 0h24v24H0z" fill="none"></path><path d="M14 3v4a1 1 0 0 0 1 1h4"></path><path d="M5 12v-7a2 2 0 0 1 2 -2h7l5 5v4"></path><path d="M7 16.5a1.5 1.5 0 0 0 -3 0v3a1.5 1.5 0 0 0 3 0"></path><path d="M10 20.25c0 .414 .336 .75 .75 .75h1.25a1 1 0 0 0 1 -1v-1a1 1 0 0 0 -1 -1h-1a1 1 0 0 1 -1 -1v-1a1 1 0 0 1 1 -1h1.25a.75 .75 0 0 1 .75 .75"></path><path d="M16 15l2 6l2 -6"></path>', 6);
var oe = [
  ae
];
var le = {
  key: 5,
  xmlns: "http://www.w3.org/2000/svg",
  width: "40",
  height: "40",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-video"
};
var ne = createBaseVNode("path", {
  stroke: "none",
  d: "M0 0h24v24H0z",
  fill: "none"
}, null, -1);
var ie = createBaseVNode("path", { d: "M15 10l4.553 -2.276a1 1 0 0 1 1.447 .894v6.764a1 1 0 0 1 -1.447 .894l-4.553 -2.276v-4z" }, null, -1);
var re = createBaseVNode("path", { d: "M3 6m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z" }, null, -1);
var se = [
  ne,
  ie,
  re
];
var de = {
  __name: "Icon",
  props: {
    name: String
  },
  setup(e) {
    return (b, o) => (openBlock(), createElementBlock(Fragment, null, [
      e.name === "xls" ? (openBlock(), createElementBlock("svg", Z, R)) : createCommentVNode("", true),
      e.name === "txt" ? (openBlock(), createElementBlock("svg", q, J)) : createCommentVNode("", true),
      e.name === "doc" || e.name === "docx" ? (openBlock(), createElementBlock("svg", K, Q)) : createCommentVNode("", true),
      e.name === "pdf" ? (openBlock(), createElementBlock("svg", X, ee)) : createCommentVNode("", true),
      e.name === "csv" ? (openBlock(), createElementBlock("svg", te, oe)) : createCommentVNode("", true),
      e.name === "mp4" || e.name === "mkv" || e.name === "mpeg-4" || e.name === "webm" || e.name === "mov" ? (openBlock(), createElementBlock("svg", le, se)) : createCommentVNode("", true)
    ], 64));
  }
};
var he = (e, b) => {
  const o = e.__vccOpts || e;
  for (const [u, v] of b)
    o[u] = v;
  return o;
};
var C = (e) => (pushScopeId("data-v-ce9694a7"), e = e(), popScopeId(), e);
var ce = { class: "dropzone" };
var pe = ["id", "accept", "multiple"];
var ue = C(() => createBaseVNode("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "60",
  height: "60",
  viewBox: "0 0 24 24",
  fill: "none",
  class: "transition-all decoration-neutral-150 ease-linear"
}, [
  createBaseVNode("path", {
    opacity: ".4",
    d: "M22 7.81v6.09l-1.63-1.4c-.78-.67-2.04-.67-2.82 0l-4.16 3.57c-.78.67-2.04.67-2.82 0l-.34-.28c-.71-.62-1.84-.68-2.64-.14l-4.92 3.3-.11.08c-.37-.8-.56-1.75-.56-2.84V7.81C2 4.17 4.17 2 7.81 2h8.38C19.83 2 22 4.17 22 7.81Z",
    fill: "#c3c3c3"
  }),
  createBaseVNode("path", {
    d: "M9.001 10.381a2.38 2.38 0 1 0 0-4.76 2.38 2.38 0 0 0 0 4.76ZM21.999 13.899v2.29c0 3.64-2.17 5.81-5.81 5.81h-8.38c-2.55 0-4.39-1.07-5.25-2.97l.11-.08 4.92-3.3c.8-.54 1.93-.48 2.64.14l.34.28c.78.67 2.04.67 2.82 0l4.16-3.57c.78-.67 2.04-.67 2.82 0l1.63 1.4Z",
    fill: "#c3c3c3"
  })
], -1));
var ve = C(() => createBaseVNode("div", { class: "titles" }, [
  createBaseVNode("h1", { class: "m-0" }, "Drop your files here")
], -1));
var fe = { class: "m-0 description" };
var me = ["src", "alt"];
var we = {
  key: 2,
  class: "img-details"
};
var ge = ["onClick"];
var Me = C(() => createBaseVNode("svg", {
  xmlns: "http://www.w3.org/2000/svg",
  width: "20",
  height: "20",
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": "2",
  "stroke-linecap": "round",
  "stroke-linejoin": "round",
  class: "icon icon-tabler icons-tabler-outline icon-tabler-x"
}, [
  createBaseVNode("path", {
    stroke: "none",
    d: "M0 0h24v24H0z",
    fill: "none"
  }),
  createBaseVNode("path", { d: "M18 6l-12 12" }),
  createBaseVNode("path", { d: "M6 6l12 12" })
], -1));
var ye = [
  Me
];
var ke = ["src"];
var be = {
  __name: "Vue3Dropzone",
  props: {
    modelValue: {
      type: Array,
      default: []
    },
    multiple: {
      type: Boolean,
      default: false
    },
    previews: {
      type: Array,
      default: []
    },
    mode: {
      type: String,
      default: "drop",
      validator(e) {
        return ["drop", "preview"].includes(e);
      }
    },
    disabled: {
      type: Boolean,
      default: false
    },
    state: {
      type: String,
      validator(e) {
        return ["error", "success", "indeterminate"].includes(e);
      }
    },
    accept: String,
    maxFileSize: {
      type: Number,
      default: 5
    },
    maxFiles: {
      type: Number,
      default: 5
    },
    width: [Number, String],
    height: [Number, String],
    imgWidth: [Number, String],
    imgHeight: [Number, String],
    previewWrapperClasses: String,
    showSelectButton: {
      type: Boolean,
      default: true
    },
    selectFileStrategy: {
      type: String,
      default: "replace"
    }
  },
  emits: ["drop", "update:modelValue"],
  setup(e, { emit: b }) {
    const o = e, u = b, v = ref(null), h = ref([]), c = ref([]), m = ref(false), H = ref(null), $ = computed(() => o.id ? $ : Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))), B = (s) => {
      const l = [...s.target.files].slice(0, o.maxFiles), t = l.map((a) => (a.size / 1024 / 1024).toFixed(2) <= o.maxFileSize), f = l.map((a) => o.accept ? o.accept.includes(a.type) : []);
      if ((t.every((a) => a === true) && o.accept && f.every((a) => a === true) || t.every((a) => a === true)) && (o.selectFileStrategy === "replace" && (h.value = l.map((a) => ({
        file: a,
        id: Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))
      }))), o.selectFileStrategy === "merge" && (h.value = [...h.value, ...l.map((a) => ({
        file: a,
        id: Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))
      }))])), t.some((a) => a !== true)) {
        const a = l.filter((z) => (z.size / 1024 / 1024).toFixed(2) > o.maxFileSize);
        u("error", a);
      }
      if (o.accept && f.some((a) => a !== true)) {
        const a = l.filter((z) => !o.accept.includes(z.type));
        u("error", a);
      }
      const D = [];
      h.value.map((a) => {
        D.push({
          src: URL.createObjectURL(a.file),
          name: a.file.name,
          size: a.file.size,
          type: a.file.type,
          isTypeAccepted: o.accept ? o.accept.includes(a.file.type) : void 0,
          id: a.id
        });
      }), c.value = D;
    }, x = () => {
      !o.disabled && o.mode !== "preview" && (m.value = !m.value);
    }, I = (s) => {
      if (x(), !o.disabled && o.mode !== "preview") {
        const l = {
          target: {
            files: [...s.dataTransfer.files]
          }
        };
        u("drop", s), B(l);
      }
    }, W = (s) => {
      c.value = c.value.filter((l) => l.id !== s.id), h.value = h.value.filter((l) => l.id !== s.id), u("update:modelValue", h.value);
    }, N = () => {
      !h.value.length && o.state === "indeterminate" && (m.value = true);
    }, j = () => {
      m.value = false;
    }, A = (s) => {
      !o.disabled && o.mode === "drop" && s.target.id === "dropzoneWrapper" ? v.value.click() : s.preventDefault();
    };
    return watchEffect(() => {
      o.previews && o.previews.length && (c.value = o.previews.map((s) => ({
        src: s,
        id: Math.floor(Math.random() * Math.floor(Math.random() * Date.now()))
      })));
    }), watchEffect(() => {
      h.value && h.value.length && u("update:modelValue", h.value);
    }), (s, l) => (openBlock(), createElementBlock("div", ce, [
      createBaseVNode("div", {
        class: normalizeClass(["dropzone-wrapper", [{ "dropzone-wrapper--active": m.value, "dropzone-wrapper--disabled": e.disabled }, e.state ? `dropzone-wrapper--${e.state}` : ""]]),
        style: normalizeStyle({ width: e.width, height: e.height }),
        onDragenter: withModifiers(x, ["prevent"]),
        onDragleave: withModifiers(x, ["prevent"]),
        onDrop: withModifiers(I, ["prevent"]),
        onDragover: l[1] || (l[1] = withModifiers(() => {
        }, ["prevent"])),
        onMouseover: N,
        onMouseleave: j,
        ref_key: "dropzoneWrapper",
        ref: H,
        onClick: withModifiers(A, ["self"]),
        id: "dropzoneWrapper"
      }, [
        createBaseVNode("input", {
          type: "file",
          ref_key: "fileInput",
          ref: v,
          class: "hidden",
          id: $.value,
          accept: e.accept,
          onInput: B,
          multiple: e.multiple
        }, null, 40, pe),
        c.value.length ? (openBlock(), createElementBlock(Fragment, { key: 1 }, [
          e.mode === "drop" ? (openBlock(), createElementBlock("div", {
            key: 0,
            class: normalizeClass(["preview-container", e.previewWrapperClasses])
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(c.value, (t) => renderSlot(s.$slots, "preview", { data: t }, () => [
              createBaseVNode("div", {
                class: normalizeClass(["preview", { preview__multiple: e.multiple, preview__file: t && t.type && !t.type.includes("image/") }]),
                style: normalizeStyle({ width: `${e.imgWidth} !important`, height: `${e.imgHeight} !important` })
              }, [
                t && t.type && t.type.includes("image/") ? (openBlock(), createElementBlock("img", {
                  key: 0,
                  src: t.src,
                  alt: t.name
                }, null, 8, me)) : createCommentVNode("", true),
                t && t.type && !t.type.includes("image/") || t && t.type && !t.type.includes("video/") ? (openBlock(), createBlock(de, {
                  key: 1,
                  name: t.name.split(".").pop()
                }, null, 8, ["name"])) : createCommentVNode("", true),
                t.name || t.size ? (openBlock(), createElementBlock("div", we, [
                  createBaseVNode("button", {
                    class: "img-remove",
                    onClick: (f) => W(t)
                  }, ye, 8, ge),
                  createBaseVNode("h2", null, toDisplayString(t.name), 1),
                  createBaseVNode("span", null, toDisplayString((t.size / 1024 / 1024).toFixed(2)) + "MB", 1)
                ])) : createCommentVNode("", true)
              ], 6)
            ], true)), 256))
          ], 2)) : createCommentVNode("", true),
          e.mode === "preview" ? (openBlock(), createElementBlock("div", {
            key: 1,
            class: normalizeClass(["preview-container", e.previewWrapperClasses])
          }, [
            (openBlock(true), createElementBlock(Fragment, null, renderList(c.value, (t) => (openBlock(), createElementBlock("div", {
              class: normalizeClass(["preview", { preview__multiple: c.value.length > 1 }]),
              style: normalizeStyle({ width: `${e.imgWidth} !important`, height: `${e.imgHeight} !important` })
            }, [
              createBaseVNode("img", {
                src: t.src
              }, null, 8, ke)
            ], 6))), 256))
          ], 2)) : createCommentVNode("", true)
        ], 64)) : (openBlock(), createElementBlock(Fragment, { key: 0 }, [
          renderSlot(s.$slots, "placeholder-img", {}, () => [
            ue
          ], true),
          renderSlot(s.$slots, "title", {}, () => [
            ve
          ], true),
          renderSlot(s.$slots, "button", { fileInput: v.value }, () => [
            e.showSelectButton ? (openBlock(), createElementBlock("button", {
              key: 0,
              onClick: l[0] || (l[0] = (t) => {
                var f;
                return (f = v.value) == null ? void 0 : f.click();
              }),
              class: "select-file"
            }, "Select File")) : createCommentVNode("", true)
          ], true),
          renderSlot(s.$slots, "description", {}, () => [
            createBaseVNode("p", fe, " Files must be under " + toDisplayString(e.maxFileSize) + "MB " + toDisplayString(e.accept ? `and in ${e.accept} formats` : ""), 1)
          ], true)
        ], 64))
      ], 38),
      e.disabled ? (openBlock(), createElementBlock("div", {
        key: 0,
        class: "dropzone-wrapper__disabled",
        onClick: l[2] || (l[2] = withModifiers(() => {
        }, ["prevent"])),
        onDrop: l[3] || (l[3] = withModifiers(() => {
        }, ["prevent"])),
        onDragover: l[4] || (l[4] = withModifiers(() => {
        }, ["prevent"]))
      }, null, 32)) : createCommentVNode("", true)
    ]));
  }
};
var xe = he(be, [["__scopeId", "data-v-ce9694a7"]]);
export {
  xe as default
};
//# sourceMappingURL=@jaxtheprime_vue3-dropzone.js.map
